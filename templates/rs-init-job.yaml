apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-rs-init
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      serviceAccountName: mongodb-exec
      containers:
      - name: rs-init
        image: bitnami/kubectl:latest
        command:
          - "sh"
          - "-c"
          - |
            exec > /proc/1/fd/1 2>/proc/1/fd/2
            set -x
            echo "Sleeping 120 seconds to let MongoDB pods be ready..."
            sleep 120
            echo "Executing replica set initiation inside the primary pod..."
            kubectl exec mongodb-replicaset-0 -c mongodb -- mongo admin --eval '
              rs.initiate({
                _id: "rs0",
                members: [
                  { _id: 0, host: "mongodb-replicaset-0.mongodb-replicaset:27017" },
                  { _id: 1, host: "mongodb-replicaset-1.mongodb-replicaset:27017" },
                  { _id: 2, host: "mongodb-replicaset-2.mongodb-replicaset:27017" }
                ]
              })
            '
            echo "Waiting 20 seconds for replica set to stabilize..."
            sleep 20

            for i in $(seq 1 10); do
              for pod in mongodb-replicaset-0 mongodb-replicaset-1 mongodb-replicaset-2; do
                echo "Checking pod: ${pod}"
                isPrimary=$(kubectl exec ${pod} -c mongodb -- mongo admin --quiet --eval "rs.isMaster().ismaster" 2>/dev/null)
                echo "Result from ${pod}: ${isPrimary}"
                if [ "${isPrimary}" = "true" ]; then
                  PRIMARY=${pod}
                  break 2
                fi
              done
              echo "No primary found, sleeping for 10 seconds before retrying..."
              sleep 10
            done

            echo "Creating external user..."
            kubectl exec ${PRIMARY} -c mongodb -- mongo admin --eval '
              db.createUser({
                  user: "admin",
                  pwd: "secret123",
                  roles: [{ role: "root", db: "admin" }]
                });
                db = db.getSiblingDB("myDb");
                db.createUser({
                  user: "app",
                  pwd: "apppass123",
                  roles: [{ role: "readWrite", db: "myDb" }]
                });
              '

            echo "Initialization complete."
            sleep 10
            sleep 20
      restartPolicy: OnFailure
