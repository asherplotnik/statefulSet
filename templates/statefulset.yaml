apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.service.name }}
spec:
  serviceName: {{ .Values.service.name }}-headless
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongodb
        image: {{ .Values.image }}
        command: ["mongod"]
        args:
        - "--bind_ip_all"
        - "--replSet=rs0"
        - "--auth"
        - "--keyFile=/etc/mongodb/keyfile"
        ports:
        - containerPort: {{ .Values.port }}
        volumeMounts:
        - name: datadir
          mountPath: /data/db
        - name: keyfile
          mountPath: /etc/mongodb
          readOnly: true
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: {{ .Values.auth.rootUser }}
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: {{ .Values.auth.rootPassword }}
        readinessProbe:
          exec:
            command: ["mongo", "--eval", "db.adminCommand({ ping: 1 })"]
          initialDelaySeconds: 5
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}